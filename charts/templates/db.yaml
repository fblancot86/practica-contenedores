apiVersion: apps/v1
kind: StatefulSet 
metadata: 
  name: {{ .Values.db.setName }}
  labels:
    {{- .Values.db.labelkey | nindent 4}}: {{ .Values.db.label }}
spec:
  selector:
    matchLabels:
      {{- .Values.db.labelkey | nindent 6}}: {{ .Values.db.label }}
  serviceName: {{ .Values.db.setName }}
  replicas: 1
  template:
    metadata:
      labels: 
        {{- .Values.db.labelkey | nindent 8}}: {{ .Values.db.label }}
    spec: 
      containers: 
        - name: {{ .Values.db.setName }}
          image: postgres:{{ .Values.db.imageTag }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: config-postgres
                  key: postgres_database
            - name: PGDATA
              valueFrom:
                configMapKeyRef:
                  name: config-postgres
                  key: postgres_data                 
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: config-postgres
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: config-postgres
                  key: postgres_password 
          ports:
          - containerPort: 5432
          resources:
            requests:
              memory: 32Mi
              cpu: 200m
            limits:
              memory: 64Mi
              cpu: 500m              
          volumeMounts:
            - name: config
              mountPath: "/docker-entrypoint-initdb.d/"
              readOnly: true
            - name: postgres-data-temp
              mountPath: {{ .Values.db.dataDir }}
          readinessProbe:
            exec:
              command:
              - pg_isready
            initialDelaySeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command:
              - pg_isready
            initialDelaySeconds: 45
            timeoutSeconds: 2
      volumes:
        - name: config
          configMap:
            name: config-postgres
            items:
            - key: "create_table.sql"
              path: "create_table.sql"    
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: {{ .Values.db.labelkey }}
                operator: In
                values:
                - {{ .Values.db.label }}
            topologyKey: "kubernetes.io/hostname"
  volumeClaimTemplates:
  - metadata:
      name: postgres-data-temp
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: "standard-rwo"
      resources:
        requests:
          storage: 2G
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.setName }}-headless
spec:
  selector:
    {{- .Values.db.labelkey | nindent 4}}: {{ .Values.db.label }}
  ports: 
  - protocol: TCP
    port: {{ .Values.db.port }}
    targetPort: 5432 
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.setName }}
spec:
  selector:
    {{- .Values.db.labelkey | nindent 4}}: {{ .Values.db.label }}
  ports: 
  - protocol: TCP
    port: {{ .Values.db.port }}
    targetPort: 5432 
  clusterIP: None